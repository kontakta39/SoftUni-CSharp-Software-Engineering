@using BookWebStore.ViewModels
@model IEnumerable<GenreIndexViewModel>

@{
    ViewData["Title"] = "Genres";
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="errorAlert" class="alert alert-danger fade show text-center" role="alert" data-bs-delay="3000" data-bs-autohide="true">
        <p class="m-0">@TempData["ErrorMessage"]</p>
    </div>
    <script>setTimeout(() => { const e=document.getElementById('errorAlert'); if(e){ e.style.transition='opacity 0.5s'; e.style.opacity='0'; setTimeout(() => e.remove(), 500); } }, 3000);</script>
}

<div class="d-flex justify-content-between align-items-center">
    <h1>@ViewData["Title"]</h1>
    @if (User.IsInRole("Administrator"))
    {
        <a asp-controller="Genre" asp-action="Add" class="btn btn-primary"><i class="fas fa-plus"></i>Add genre</a>
    }
</div>
<hr class="mb-4" />

@if (!Model.Any())
{
    <h3 class="text-start">There are no created genres.</h3>
}
else
{
    <div class="row text-center">
        @foreach (var genre in Model.OrderBy(g => g.Name))
        {
            <div class="col-md-3 mb-4">
                <div class="card h-100" style="width: 100%;">
                    <div class="card-body d-flex flex-column">
                        <h4 class="card-title mb-3">@genre.Name</h4>
                        @if (User.IsInRole("Administrator"))
                        {
                            <div class="d-flex justify-content-between mt-auto">
                                <a asp-controller="Genre" asp-action="Edit" asp-route-id="@genre.Id" class="btn btn-primary me-2 w-50">Edit</a>
                                <a asp-controller="Genre" asp-action="Delete" asp-route-id="@genre.Id" class="btn btn-danger me-2 w-50">Delete</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}