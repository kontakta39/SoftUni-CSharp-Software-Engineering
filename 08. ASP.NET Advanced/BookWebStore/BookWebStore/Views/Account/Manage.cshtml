@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Manage Account";
    ApplicationUser user = await UserManager.GetUserAsync(User);
    IList<string> roles = await UserManager.GetRolesAsync(user);
    string role = roles.FirstOrDefault();
    bool isMasterAdmin = User.IsInRole("Administrator") && user.Email == "kontakta39@mail.bg" && user.UserName == "kontakta39";
    string? activePage = ViewData["ActivePage"]?.ToString();
    
}

@if (SignInManager.IsSignedIn(User))
{
    <div class="d-flex justify-content-center align-items-center mb-3 mt-3">
        <h1>Hello, @role.ToLower() @user.FirstName @user.LastName</h1>
    </div>
    <hr class="mb-5" />

    <div class="row g-5" style="margin-bottom: 200px;">
        <div class="col-md-3">
            <!-- Sidebar -->
            <ul class="nav nav-pills flex-column">
                @if (isMasterAdmin)
                {
                    <li class="nav-item">
                        <a class="nav-link fs-5 @(activePage == "ManageUsers" ? "active" : "")"
                           href="@Url.Action("Manage", "Account", new { page = "ManageUsers" })">Manage users</a>
                    </li>
                }
                <li class="nav-item">
                    <a class="nav-link fs-5 @(activePage == "Profile" ? "active" : "")"
                       href="@Url.Action("Manage", "Account", new { page = "Profile" })">Profile</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link fs-5 @(activePage == "Email" ? "active" : "")"
                       href="@Url.Action("Manage", "Account", new { page = "Email" })">Email</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link fs-5 @(activePage == "ChangePassword" ? "active" : "")"
                       href="@Url.Action("Manage", "Account", new { page = "ChangePassword" })">Change password</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link fs-5 @(activePage == "DeleteAccount" ? "active" : "")"
                       href="@Url.Action("Manage", "Account", new { page = "DeleteAccount" })">Delete account</a>
                </li>
            </ul>
        </div>

        <div class="col-md-9">
            @if (activePage == "ManageUsers" && isMasterAdmin)
            {
                @await Html.PartialAsync("ManagePartials/_ManageUsersPartial")
            }
            else if (activePage == "Profile")
            {
                @await Html.PartialAsync("ManagePartials/_ProfilePartial")
            }
            else if (activePage == "Email")
            {
                @await Html.PartialAsync("ManagePartials/_EmailPartial")
            }
            else if (activePage == "ChangePassword")
            {
                @await Html.PartialAsync("ManagePartials/_ChangePasswordPartial")
            }
            else if (activePage == "DeleteAccount")
            {
                @await Html.PartialAsync("ManagePartials/_DeleteAccountPartial")
            }
        </div>
    </div>
}